<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cf.aries.base.dao.UserInfoMapper" >
  <resultMap id="BaseResultMap" type="com.cf.aries.common.po.UserInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="open_id" property="openId" jdbcType="BIGINT" />
    <result column="sex" property="sex" jdbcType="BIT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="province" property="province" jdbcType="VARCHAR" />
    <result column="country" property="country" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="point" property="point" jdbcType="INTEGER" />
    <result column="image" property="image" jdbcType="VARCHAR" />
    <result column="is_private" property="isPrivate" jdbcType="BIT" />
    <result column="is_delete" property="isDelete" jdbcType="BIT" />
    <result column="ctime" property="ctime" jdbcType="CHAR" />
    <result column="utime" property="utime" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, open_id, sex, name, city, province, country, password, point, image, is_private, 
    is_delete, ctime, utime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cf.aries.common.po.UserInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.cf.aries.common.po.UserInfoExample" >
    delete from user_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cf.aries.common.po.UserInfo" >
    insert into user_info (id, open_id, sex, name, 
      city, province, country, 
      password, point, image, 
      is_private, is_delete, ctime, utime
      )
    values (#{id,jdbcType=BIGINT}, #{openId,jdbcType=BIGINT}, #{sex,jdbcType=BIT}, #{name,jdbcType=VARCHAR}, 
      #{city,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, #{country,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{point,jdbcType=INTEGER}, #{image,jdbcType=VARCHAR}, 
      #{isPrivate,jdbcType=BIT}, #{isDelete,jdbcType=BIT}, #{ctime,jdbcType=CHAR}, #{utime,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cf.aries.common.po.UserInfo" >
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="openId != null" >
        open_id,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="province != null" >
        province,
      </if>
      <if test="country != null" >
        country,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="point != null" >
        point,
      </if>
      <if test="image != null" >
        image,
      </if>
      <if test="isPrivate != null" >
        is_private,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="ctime != null" >
        ctime,
      </if>
      <if test="utime != null" >
        utime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="openId != null" >
        #{openId,jdbcType=BIGINT},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=BIT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="country != null" >
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="point != null" >
        #{point,jdbcType=INTEGER},
      </if>
      <if test="image != null" >
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="isPrivate != null" >
        #{isPrivate,jdbcType=BIT},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=BIT},
      </if>
      <if test="ctime != null" >
        #{ctime,jdbcType=CHAR},
      </if>
      <if test="utime != null" >
        #{utime,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cf.aries.common.po.UserInfoExample" resultType="java.lang.Integer" >
    select count(*) from user_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.openId != null" >
        open_id = #{record.openId,jdbcType=BIGINT},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=BIT},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null" >
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.province != null" >
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.country != null" >
        country = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.point != null" >
        point = #{record.point,jdbcType=INTEGER},
      </if>
      <if test="record.image != null" >
        image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.isPrivate != null" >
        is_private = #{record.isPrivate,jdbcType=BIT},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=BIT},
      </if>
      <if test="record.ctime != null" >
        ctime = #{record.ctime,jdbcType=CHAR},
      </if>
      <if test="record.utime != null" >
        utime = #{record.utime,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user_info
    set id = #{record.id,jdbcType=BIGINT},
      open_id = #{record.openId,jdbcType=BIGINT},
      sex = #{record.sex,jdbcType=BIT},
      name = #{record.name,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      province = #{record.province,jdbcType=VARCHAR},
      country = #{record.country,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      point = #{record.point,jdbcType=INTEGER},
      image = #{record.image,jdbcType=VARCHAR},
      is_private = #{record.isPrivate,jdbcType=BIT},
      is_delete = #{record.isDelete,jdbcType=BIT},
      ctime = #{record.ctime,jdbcType=CHAR},
      utime = #{record.utime,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cf.aries.common.po.UserInfo" >
    update user_info
    <set >
      <if test="openId != null" >
        open_id = #{openId,jdbcType=BIGINT},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=BIT},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="country != null" >
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="point != null" >
        point = #{point,jdbcType=INTEGER},
      </if>
      <if test="image != null" >
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="isPrivate != null" >
        is_private = #{isPrivate,jdbcType=BIT},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
      <if test="ctime != null" >
        ctime = #{ctime,jdbcType=CHAR},
      </if>
      <if test="utime != null" >
        utime = #{utime,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cf.aries.common.po.UserInfo" >
    update user_info
    set open_id = #{openId,jdbcType=BIGINT},
      sex = #{sex,jdbcType=BIT},
      name = #{name,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      point = #{point,jdbcType=INTEGER},
      image = #{image,jdbcType=VARCHAR},
      is_private = #{isPrivate,jdbcType=BIT},
      is_delete = #{isDelete,jdbcType=BIT},
      ctime = #{ctime,jdbcType=CHAR},
      utime = #{utime,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>